name: Sync Question Bank
on:
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 * * * *" # Every hour
  workflow_dispatch: {}

permissions:
  contents: read
  packages: read

jobs:
  sync_leetcode:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lowercase owner
        id: lc
        run: echo "value=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ steps.lc.outputs.value }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create shared network
        run: docker network create peerprep_net || true

      - name: Pull images (ensure latest tag exists)
        run: |
          docker pull ghcr.io/${{ steps.lc.outputs.value }}/peerprep-leetcode-backend:latest
          docker pull ghcr.io/${{ steps.lc.outputs.value }}/peerprep-question-backend:latest

      # ---------- LEETCODE BACKEND ----------
      - name: Run LeetCode Backend (exposed for triggering)
        run: |
          docker run -d --name leetcode-backend --network peerprep_net \
            -p 5285:5285 \
            -e MONGODB_URI="${{ secrets.MONGODB_URI }}" \
            -e ADMIN_TOKEN="${{ secrets.ADMIN_TOKEN }}" \
            ghcr.io/${{ steps.lc.outputs.value }}/peerprep-leetcode-backend:latest

      # ---------- QUESTION BACKEND ----------
      - name: Run Question Backend (internal only)
        run: |
          docker run -d --name question-backend --network peerprep_net \
            -e MONGODB_URI="${{ secrets.MONGODB_URI }}" \
            -e ADMIN_TOKEN="${{ secrets.ADMIN_TOKEN }}" \
            ghcr.io/${{ steps.lc.outputs.value }}/peerprep-question-backend:latest

      - name: Trigger seed-batch
        run: |
          curl -X POST \
            -H "X-Admin-Token: ${{ secrets.ADMIN_TOKEN }}" \
            http://leetcode-backend:5285/api/v1/leetcode/seed-batch

      - name: Dump logs on failure
        if: failure()
        run: |
          echo "===== question-backend logs ====="
          docker logs question-backend || true
          echo "===== leetcode-backend logs ====="
          docker logs leetcode-backend || true

      - name: Cleanup
        if: always()
        run: |
          docker stop leetcode-backend question-backend || true
          docker network rm peerprep_net || true
